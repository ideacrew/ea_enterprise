version: "3.8"

services:
  #
  # Infrastructure Services
  #
  mongodb:
    image: mongo:4.2
    hostname: mongodb
    volumes:
      - mongodb:/data/db
      - mongodb_config:/data/configdb
    ports:
      - 27017:27017
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      interval: 1s
      timeout: 5s
      retries: 30
      start_period: 20s

  rabbitmq:
    image: rabbitmq:3.8-management
    hostname: rabbitmq
    env_file:
      - ./site/rabbitmq/rabbitmq.dev.env
    volumes:
      - rabbitmq_etc:/etc/rabbitmq/
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_logs:/var/log/rabbitmq/
      - ./site/rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro
      - ./site/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 1s
      timeout: 3s
      retries: 30


  redis:
    # hostname: redis
    image: redis:7.0
    ports:
      - 6379
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

  #
  # Reverse proxies:
  #

  mcgw_nginx:
    image: nginx:1.22
    volumes:
      - ${PWD}/site/mcgw_nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      medicaid_gateway:
        condition: service_started
    links:
      - medicaid_gateway
    ports:
      - 3030:3030


  #
  # Microservices
  #

  enroll:
    build:
      context: ../enroll
      dockerfile: ../ea_enterprise/site/enroll_service/Dockerfile
      args:
        BUNDLER_VERSION_OVERRIDE: '2.2.12'
    image: enroll:dev-0.1.0
    environment:
      - SHELL=/bin/bash
    volumes:
      - ../enroll:/enroll
      - enroll_gem_cache:/usr/local/bundle/2.5
      - enroll_node_modules_cache:/enroll/node_modules
      # - enroll_packs_cache:/enroll/public/packs
      - enroll_rails_cache:/enroll/tmp/cache
    env_file:
      - ./site/.env.dev
      - ./site/rabbitmq/rabbitmq.dev.env
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    links:
      - mongodb
      - fdsh_gateway
      - medicaid_gateway
      - polypress
    ports:
      - "3000:3000"
    # this works for sure bin/webpack-dev-server && 
    #command: bash -c "rm -rf tmp/pids/server.pid && mkdir -p tmp/pids && bundle install && CLIENT=dc bin/rails server --port 3000 --binding 0.0.0.0"
    # DC !
    #command: bash -c "rm -rf tmp/pids/server.pid && mkdir -p tmp/pids &&bundle exec rake configuration:client_configuration_toggler client=dc && bin/rails server --port 3000 --binding 0.0.0.0"
    # Maine !
    # command: bash -c "rm -rf tmp/pids/server.pid && mkdir -p tmp/pids && bundle exec rake configuration:client_configuration_toggler client=me && bin/rails server --port 3000 --binding 0.0.0.0"
    # ME / new stykle!
    # command: bash -c "rm -rf tmp/pids/server.pid && mkdir -p tmp/pids && CLIENT=me bin/rails server --port 3000 --binding 0.0.0.0"
    # DC / new stykle!
    command: bash -c "rm -rf tmp/pids/server.pid && mkdir -p tmp/pids && bin/webpack && CLIENT=dc bin/rails server --port 3000 --binding 0.0.0.0"


  fdsh_gateway:
    build:
      context: ../fdsh_gateway
      dockerfile: ../ea_enterprise/site/fdsh_gateway_service/Dockerfile
    image: fdsh_gateway:dev-0.1.0
    volumes:
      - ../fdsh_gateway:/fdsh_gateway
      - fdsh_gem_cache:/usr/local/bundle/2.7.2
    env_file:
      - ./site/.env.dev
      - ./site/rabbitmq/rabbitmq.dev.env
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: bash -c "rm -rf tmp/pids/server.pid && mkdir -p tmp/pids && bundle install && bin/rails server --port 3006 --binding 0.0.0.0"
    links:
      - mongodb
      - rabbitmq
    ports:
      - "3006:3006"

  medicaid_gateway:
    build:
      context: ../medicaid_gateway
      dockerfile: ../ea_enterprise/site/medicaid_gateway_service/Dockerfile
      #dockerfile: ../medicaid_gateway/.docker/development/Dockerfile
      # args:
      #     RUBY_VERSION: "2.7.2"
      #     BUNDLER_VERSION_OVERRIDE: "2.2.14"
      #     NODE_MAJOR: "12"
      #     YARN_VERSION: "1.22.4"
    image: medicaid_gateway:dev-0.1.0
    volumes:
      - ../medicaid_gateway:/medicaid_gateway
      - mcg_gem_cache:/usr/local/bundle/2.7
      # - mcg_rails_cache:/medicaid_gateway/tmp/cache
      #- .:/medicaid_gateway:cached
      - mcg_rails_cache:/medicaid_gateway/tmp/cache
      - mcg_bundle:/bundle
      - mcg_node_modules:/medicaid_gateway/node_modules
      - mcg_packs:/medicaid_gateway/public/packs
    env_file:
      - ./site/.env.dev
      - ./site/rabbitmq/rabbitmq.dev.env
      - ./site/medicaid_gateway_service/.env.dev
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    links:
      - mitc
      - mongodb
      - rabbitmq
      - redis
    ports:
      - "3005:3005"
    #this works for sure
    command: bash -c "rm -rf tmp/pids/server.pid && mkdir -p tmp/pids && bundle install && yarn install --check-files && bin/rails server --port 3005 --binding 0.0.0.0"
    #command: bash -c "rm -rf tmp/pids/server.pid && mkdir -p tmp/pids && bin/rails server --port 3005 --binding 0.0.0.0"

  mitc:
    build:
      context: ../medicaid_eligibility
      dockerfile: ../ea_enterprise/site/mitc_service/Dockerfile
    image: mitc:dev-0.1.0
    volumes:
      - ../medicaid_eligibility:/mitc
      - mitc_gem_cache:/usr/local/bundle/2.3
      - type: tmpfs
        target: /mitc/tmp/pids/
    command: bash -c "bin/rails server --port 3001 --binding 0.0.0.0"
    ports:
      - "3001:3001"
    depends_on:
      redis:
        condition: service_healthy
    links:
      - redis
      # - mongodb

  polypress:
    build:
      context: ../polypress
      dockerfile: ../ea_enterprise/site/polypress_service/Dockerfile
    image: polypress:dev-0.1.0
    volumes:
      - ../polypress:/polypress
      - polypress_gem_cache:/usr/local/bundle/2.7
      # - yarn_cache:/yarn
      # - node_modules_cache:/polypress/node_modules
    env_file:
      - ./site/.env.dev
      - ./site/rabbitmq/rabbitmq.dev.env
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    ports:
      - "3003:3003"
    #command: bash -c "rm -rf tmp/pids/server.pid && mkdir -p tmp/pids && bundle install && yarn install --check-files && bin/rails server --port 3003 --binding 0.0.0.0"
    command: bash -c "rm -rf tmp/pids/server.pid && mkdir -p tmp/pids && bin/rails server --port 3003 --binding 0.0.0.0"
    links:
      - mongodb
      - rabbitmq
volumes:
  mitc:
  fdsh_gem_cache:
  polypress_gem_cache:
  mitc_gem_cache:
  node_modules_cache:
  packs_cache:
  mongodb:
  mongodb_config:
  rabbitmq_etc:
  rabbitmq_data:
  rabbitmq_logs:
  mcg_rails_cache:
  mcg_bundle:
  mcg_node_modules:
  mcg_packs:
  mcg_gem_cache:
  enroll_gem_cache:
  enroll_node_modules_cache:
  enroll_packs_cache:
  enroll_rails_cache:

