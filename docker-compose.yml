#
# Load Balancer
#
# lb:
#   build: ./.docker/lb/
#   links:
#     - consul
#   ports:
#     - "80:80"
#     - "8181:8181"
#
# Service Discovery - Consul
#
# consul:
#   command: -server -bootstrap -advertise 10.0.2.15
#   image: progrium/consul:latest
#   ports:
#     - "8300:8300"
#     - "8400:8400"
#     - "8500:8500"
#     - "8600:53/udp"
#
# Service Discovery - Registrator
#
# registrator:
#   command: -ip=10.0.2.15 consul://consul:8500
#   image: gliderlabs/registrator:latest
#   links:
#     - consul
#   volumes:
#     - "/var/run/docker.sock:/tmp/docker.sock"
#
# Data-only container for rubygems
#
rubygems:
  image: "busybox"
  volumes:
    - /web/rubygems/2.7.2

# data:
#   image: "busybox:glibc"
#   volumes:
#     - /var/lib/mysql

#
# Infrastructure
#

db:
  image: mongo:4.2
  volumes:
    - mongodb:/data/db
    - mongodb_config:/data/configdb
  ports:
    - 27017:27017

rabbitmq:
  image: rabbitmq:3.8-management
  hostname: "rabbitmq"
  volumes:
    - rabbitmq_etc:/etc/rabbitmq/
    - rabbitmq_data:/var/lib/rabbitmq/
    - rabbitmq_logs:/var/log/rabbitmq/
    - ./.docker/rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro
    - ./.docker/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
  ports:
    - 5672:5672
    - 15672:15672
# db:
#   image: "mysql:latest"
#   environment:
#     MYSQL_ROOT_PASSWORD: root
#   volumes_from:
#     - data
# memcache:
#   image: "sylvainlasnier/memcached:latest"
# elastic:
#   image: "elasticsearch:latest"

#
# Microservices
#
# fdsh_gateway:
#   extends:
#     file: common.yml
#     service: microservice
#   build: ./services/rosi_user_service
#   environment:
#     SERVICE_3000_NAME: "fdsh_gateway"
#     SERVICE_3000_TAGS: "backend,fdsh_gateway"
#   volumes:
#     - ./services/rosi_user_service:/web/service
#   volumes_from:
#     - rubygems
#   links:
#     - db
#     - rabbitmq
#     - consul

# user:
#   extends:
#     file: common.yml
#     service: microservice
#   build: ./services/rosi_user_service
#   environment:
#     SERVICE_3000_NAME: "user"
#     SERVICE_3000_TAGS: "backend,user"
#   volumes:
#     - ./services/rosi_user_service:/web/service
#   volumes_from:
#     - rubygems
#   links:
#     - db
#     - rabbitmq
#     - consul
# catalog:
#   extends:
#     file: common.yml
#     service: microservice
#   build: ./services/rosi_catalog_service
#   environment:
#     SERVICE_3000_NAME: "catalog"
#     SERVICE_3000_TAGS: "backend,catalog"
#   volumes:
#     - ./services/rosi_catalog_service:/web/service
#   volumes_from:
#     - rubygems
#   links:
#     - db
#     - rabbitmq
#     - consul
# cart:
#   extends:
#     file: common.yml
#     service: microservice
#   build: ./services/rosi_cart_service
#   environment:
#     SERVICE_3000_NAME: "cart"
#     SERVICE_3000_TAGS: "backend,cart"
#   volumes:
#     - ./services/rosi_cart_service:/web/service
#   volumes_from:
#     - rubygems
#   links:
#     - db
#     - rabbitmq
#     - consul
# mybusiness:
#   extends:
#     file: common.yml
#     service: microservice
#   build: ./services/rosi_my_business_service
#   environment:
#     SERVICE_3000_NAME: "mybusiness"
#     SERVICE_3000_TAGS: "backend,mybusiness"
#   volumes:
#     - ./services/rosi_my_business_service:/web/service
#   volumes_from:
#     - rubygems
#   links:
#     - db
#     - rabbitmq
#     - consul
# inventory:
#   extends:
#     file: common.yml
#     service: microservice
#   build: ./services/rosi_inventory_service
#   command: "runsvdir /etc/service"
#   environment:
#     SERVICE_3000_NAME: "inventory"
#     SERVICE_3000_TAGS: "backend,inventory"
#   volumes:
#     - ./services/rosi_inventory_service:/web/service
#   volumes_from:
#     - rubygems
#   links:
#     - db
#     - rabbitmq
#     - consul
# oms:
#   extends:
#     file: common.yml
#     service: microservice
#   build: ./services/rosi_oms_service
#   command: "runsvdir /etc/service"
#   environment:
#     SERVICE_3000_NAME: "oms"
#     SERVICE_3000_TAGS: "backend,oms"
#   volumes:
#     - ./services/rosi_oms_service:/web/service
#   volumes_from:
#     - rubygems
#   links:
#     - db
#     - rabbitmq
#     - consul
# tax:
#   extends:
#     file: common.yml
#     service: microservice
#   build: ./services/rosi_tax_service
#   command: "runsvdir /etc/service"
#   environment:
#     SERVICE_3000_NAME: "tax"
#     SERVICE_3000_TAGS: "backend,tax"
#   volumes:
#     - ./services/rosi_tax_service:/web/service
#   volumes_from:
#     - rubygems
#   links:
#     - rabbitmq
#     - consul
# #
# # Frontend
# #
# keeplounge:
#   extends:
#     file: common.yml
#     service: frontend
#   build: ./frontend/keep_lounge
#   environment:
#     SERVICE_80_NAME: "keeplounge"
#     SERVICE_80_TAGS: "frontend,keep,keeplounge"
#   volumes:
#     - ./frontend/keep_lounge:/web/client
# keepwww:
#   extends:
#     file: common.yml
#     service: frontend
#   build: ./frontend/keep_www
#   environment:
#     SERVICE_80_NAME: "keepwww"
#     SERVICE_80_TAGS: "frontend,keep,keepwww"
#   volumes:
#     - ./frontend/keep_www:/web/client
